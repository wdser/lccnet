Script started on 2022-11-20 23:43:42+08:00 [TERM="xterm-256color" TTY="/dev/pts/2" COLUMNS="80" LINES="24"]
]0;mrwang@computer: ~/code/calibration/dl/lccnet[01;32mmrwang@computer[00m:[01;34m~/code/calibration/dl/lccnet[00m$ conda activate lccnet
(lccnet) ]0;mrwang@computer: ~/code/calibration/dl/lccnet[01;32mmrwang@computer[00m:[01;34m~/code/calibration/dl/lccnet[00m$ python train_with_sacred.py 
WARNING - LCCNet - No observers have been added to this run
INFO - LCCNet - Running command 'main'
INFO - LCCNet - Started
Loss Function Choice: combined
Val Sequence:  00
Ground truth poses are not avaialble for sequence 11.
Ground truth poses are not avaialble for sequence 12.
Ground truth poses are not avaialble for sequence 13.
Ground truth poses are not avaialble for sequence 14.
Ground truth poses are not avaialble for sequence 15.
Ground truth poses are not avaialble for sequence 16.
Ground truth poses are not avaialble for sequence 17.
Ground truth poses are not avaialble for sequence 18.
Ground truth poses are not avaialble for sequence 19.
Ground truth poses are not avaialble for sequence 20.
Ground truth poses are not avaialble for sequence 21.
Ground truth poses are not avaialble for sequence 11.
Ground truth poses are not avaialble for sequence 12.
Ground truth poses are not avaialble for sequence 13.
Ground truth poses are not avaialble for sequence 14.
Ground truth poses are not avaialble for sequence 15.
Ground truth poses are not avaialble for sequence 16.
Ground truth poses are not avaialble for sequence 17.
Ground truth poses are not avaialble for sequence 18.
Ground truth poses are not avaialble for sequence 19.
Ground truth poses are not avaialble for sequence 20.
Ground truth poses are not avaialble for sequence 21.
VAL SET: Using this file: /home/mrwang/data/kitti_odometry/dataset/sequences/val_RT_left_seq00_1.00_0.10.csv
Number of the train dataset: 39011
Number of the val dataset: 4541
39011
4541
Loading weights from /home/mrwang/data/kitti_odometry/pretrain/kitti_iter1.tar
Number of model parameters: 69987887
This is 145-th epoch
/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/site-packages/torch/optim/lr_scheduler.py:417: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  "please use `get_last_lr()`.", UserWarning)
Init worker 0 with seed 789068397
(4, 123737)
torch.Size([4, 123737])
(4, 113500)
torch.Size([4, 113500])
(4, 127128)
torch.Size([4, 127128])
/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/site-packages/torch/nn/functional.py:3635: UserWarning: Default upsampling behavior when mode=bilinear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode)
(4, 127292)
torch.Size([4, 127292])
(4, 124143)
torch.Size([4, 124143])
(4, 112448)
torch.Size([4, 112448])
(4, 121714)
torch.Size([4, 121714])
(4, 115656)
torch.Size([4, 115656])
(4, 110401)
torch.Size([4, 110401])
(4, 109815)
torch.Size([4, 109815])
(4, 125291)
torch.Size([4, 125291])
(4, 121195)
torch.Size([4, 121195])
(4, 121360)
torch.Size([4, 121360])
(4, 121187)
torch.Size([4, 121187])
(4, 110079)
torch.Size([4, 110079])
(4, 112320)
torch.Size([4, 112320])
(4, 121435)
torch.Size([4, 121435])
(4, 119927)
torch.Size([4, 119927])
(4, 92874)
torch.Size([4, 92874])
(4, 111136)
torch.Size([4, 111136])
(4, 125895)
torch.Size([4, 125895])
(4, 118259)
torch.Size([4, 118259])
(4, 110978)
torch.Size([4, 110978])
(4, 117147)
torch.Size([4, 117147])
(4, 119466)
torch.Size([4, 119466])
(4, 86186)
torch.Size([4, 86186])
(4, 123959)
torch.Size([4, 123959])
(4, 104065)
torch.Size([4, 104065])
(4, 124228)
torch.Size([4, 124228])
(4, 119978)
torch.Size([4, 119978])
(4, 119080)
torch.Size([4, 119080])
(4, 117652)
torch.Size([4, 117652])
(4, 94283)
torch.Size([4, 94283])
(4, 126410)
torch.Size([4, 126410])
(4, 102845)
torch.Size([4, 102845])
(4, 126910)
torch.Size([4, 126910])
(4, 113612)
torch.Size([4, 113612])
(4, 106484)
torch.Size([4, 106484])
(4, 125134)
torch.Size([4, 125134])
(4, 116190)
torch.Size([4, 116190])
(4, 120149)
torch.Size([4, 120149])
(4, 120728)
torch.Size([4, 120728])
(4, 94055)
torch.Size([4, 94055])
(4, 125296)
torch.Size([4, 125296])
(4, 97315)
torch.Size([4, 97315])
(4, 124256)
torch.Size([4, 124256])
(4, 110898)
torch.Size([4, 110898])
(4, 125690)
torch.Size([4, 125690])
(4, 124109)
torch.Size([4, 124109])
(4, 126044)
torch.Size([4, 126044])
(4, 107708)
torch.Size([4, 107708])
(4, 127288)
torch.Size([4, 127288])
(4, 117445)
torch.Size([4, 117445])
Iter 50/39011 training loss = 0.255, time = 0.7013, time for 50 iter: 8.9447
(4, 118909)
torch.Size([4, 118909])
(4, 124000)
torch.Size([4, 124000])
(4, 127054)
torch.Size([4, 127054])
(4, 119324)
torch.Size([4, 119324])
(4, 122340)
torch.Size([4, 122340])
(4, 124280)
torch.Size([4, 124280])
(4, 124229)
torch.Size([4, 124229])
(4, 112597)
torch.Size([4, 112597])
(4, 124545)
torch.Size([4, 124545])
(4, 125882)
torch.Size([4, 125882])
(4, 123761)
torch.Size([4, 123761])
(4, 125982)
torch.Size([4, 125982])
(4, 103223)
torch.Size([4, 103223])
(4, 120550)
torch.Size([4, 120550])
(4, 120465)
torch.Size([4, 120465])
(4, 118748)
torch.Size([4, 118748])
(4, 122778)
torch.Size([4, 122778])
(4, 123850)
torch.Size([4, 123850])
(4, 114077)
torch.Size([4, 114077])
(4, 125921)
torch.Size([4, 125921])
(4, 119742)
torch.Size([4, 119742])
(4, 99428)
torch.Size([4, 99428])
(4, 101820)
torch.Size([4, 101820])
(4, 125794)
torch.Size([4, 125794])
(4, 103874)
torch.Size([4, 103874])
(4, 115426)
torch.Size([4, 115426])
(4, 118613)
torch.Size([4, 118613])
(4, 120216)
torch.Size([4, 120216])
(4, 119582)
torch.Size([4, 119582])
(4, 103348)
torch.Size([4, 103348])
(4, 108319)
torch.Size([4, 108319])
(4, 109324)
torch.Size([4, 109324])
(4, 127477)
torch.Size([4, 127477])
(4, 125296)
torch.Size([4, 125296])
(4, 117203)
torch.Size([4, 117203])
(4, 118511)
torch.Size([4, 118511])
(4, 127793)
torch.Size([4, 127793])
(4, 94928)
torch.Size([4, 94928])
(4, 123927)
torch.Size([4, 123927])
(4, 124547)
torch.Size([4, 124547])
(4, 123771)
torch.Size([4, 123771])
(4, 87698)
torch.Size([4, 87698])
(4, 121533)
torch.Size([4, 121533])
(4, 109886)
torch.Size([4, 109886])
(4, 116758)
torch.Size([4, 116758])
(4, 118625)
torch.Size([4, 118625])
(4, 104254)
torch.Size([4, 104254])
(4, 124874)
torch.Size([4, 124874])
(4, 127040)
torch.Size([4, 127040])
(4, 121627)
torch.Size([4, 121627])
Iter 100/39011 training loss = 0.137, time = 0.6336, time for 50 iter: 7.4516
(4, 126585)
torch.Size([4, 126585])
(4, 116167)
torch.Size([4, 116167])
(4, 122771)
torch.Size([4, 122771])
(4, 126279)
torch.Size([4, 126279])
(4, 114699)
torch.Size([4, 114699])
(4, 119730)
torch.Size([4, 119730])
(4, 110131)
torch.Size([4, 110131])
(4, 123773)
torch.Size([4, 123773])
(4, 118996)
torch.Size([4, 118996])
(4, 124111)
torch.Size([4, 124111])
(4, 112497)
torch.Size([4, 112497])
(4, 103171)
torch.Size([4, 103171])
(4, 125725)
torch.Size([4, 125725])
(4, 83411)
torch.Size([4, 83411])
(4, 115120)
torch.Size([4, 115120])
(4, 115554)
torch.Size([4, 115554])
(4, 92281)
torch.Size([4, 92281])
(4, 121854)
torch.Size([4, 121854])
(4, 127291)
torch.Size([4, 127291])
(4, 93192)
torch.Size([4, 93192])
(4, 113744)
torch.Size([4, 113744])
(4, 124445)
torch.Size([4, 124445])
(4, 120069)
torch.Size([4, 120069])
(4, 101787)
torch.Size([4, 101787])
(4, 125100)
torch.Size([4, 125100])
(4, 119022)
torch.Size([4, 119022])
(4, 117667)
torch.Size([4, 117667])
(4, 125906)
torch.Size([4, 125906])
(4, 122240)
torch.Size([4, 122240])
(4, 117136)
torch.Size([4, 117136])
(4, 125811)
torch.Size([4, 125811])
(4, 123995)
torch.Size([4, 123995])
(4, 105534)
torch.Size([4, 105534])
(4, 108478)
torch.Size([4, 108478])
(4, 84414)
torch.Size([4, 84414])
(4, 118597)
torch.Size([4, 118597])
(4, 117042)
torch.Size([4, 117042])
(4, 126758)
torch.Size([4, 126758])
(4, 120671)
torch.Size([4, 120671])
(4, 100160)
torch.Size([4, 100160])
(4, 102909)
torch.Size([4, 102909])
(4, 116653)
torch.Size([4, 116653])
(4, 122556)
torch.Size([4, 122556])
(4, 124155)
torch.Size([4, 124155])
(4, 116957)
torch.Size([4, 116957])
(4, 122655)
torch.Size([4, 122655])
(4, 113977)
torch.Size([4, 113977])
(4, 114832)
torch.Size([4, 114832])
(4, 120942)
torch.Size([4, 120942])
(4, 120684)
torch.Size([4, 120684])
Iter 150/39011 training loss = 0.125, time = 0.6405, time for 50 iter: 7.4832
(4, 126022)
torch.Size([4, 126022])
(4, 108258)
torch.Size([4, 108258])
(4, 118381)
torch.Size([4, 118381])
(4, 113646)
torch.Size([4, 113646])
(4, 106655)
torch.Size([4, 106655])
(4, 125212)
torch.Size([4, 125212])
(4, 125626)
torch.Size([4, 125626])
(4, 123803)
torch.Size([4, 123803])
(4, 125801)
torch.Size([4, 125801])
(4, 114946)
torch.Size([4, 114946])
(4, 118142)
torch.Size([4, 118142])
(4, 126014)
torch.Size([4, 126014])
(4, 114015)
torch.Size([4, 114015])
(4, 124437)
torch.Size([4, 124437])
(4, 122208)
torch.Size([4, 122208])
(4, 104615)
torch.Size([4, 104615])
(4, 107623)
torch.Size([4, 107623])
(4, 126149)
torch.Size([4, 126149])
(4, 110444)
torch.Size([4, 110444])
(4, 113981)
torch.Size([4, 113981])
(4, 117804)
torch.Size([4, 117804])
(4, 90982)
torch.Size([4, 90982])
(4, 117635)
torch.Size([4, 117635])
(4, 121575)
torch.Size([4, 121575])
(4, 110574)
torch.Size([4, 110574])
(4, 121128)
torch.Size([4, 121128])
(4, 85772)
torch.Size([4, 85772])
(4, 126533)
torch.Size([4, 126533])
(4, 104164)
torch.Size([4, 104164])
(4, 123001)
torch.Size([4, 123001])
(4, 121059)
torch.Size([4, 121059])
(4, 105112)
torch.Size([4, 105112])
(4, 126931)
torch.Size([4, 126931])
(4, 117419)
torch.Size([4, 117419])
(4, 119361)
torch.Size([4, 119361])
(4, 122085)
torch.Size([4, 122085])
(4, 125884)
torch.Size([4, 125884])
(4, 121917)
torch.Size([4, 121917])
(4, 120790)
torch.Size([4, 120790])
(4, 126008)
torch.Size([4, 126008])
(4, 117186)
torch.Size([4, 117186])
(4, 124985)
torch.Size([4, 124985])
(4, 123885)
torch.Size([4, 123885])
(4, 127093)
torch.Size([4, 127093])
(4, 123189)
torch.Size([4, 123189])
(4, 105925)
torch.Size([4, 105925])
(4, 112716)
torch.Size([4, 112716])
(4, 110563)
torch.Size([4, 110563])
(4, 90081)
torch.Size([4, 90081])
(4, 119224)
torch.Size([4, 119224])
Iter 200/39011 training loss = 0.124, time = 0.6159, time for 50 iter: 7.3557
(4, 125753)
torch.Size([4, 125753])
(4, 106473)
torch.Size([4, 106473])
(4, 102482)
torch.Size([4, 102482])
(4, 107793)
torch.Size([4, 107793])
(4, 81953)
torch.Size([4, 81953])
(4, 127576)
torch.Size([4, 127576])
(4, 124995)
torch.Size([4, 124995])
(4, 123738)
torch.Size([4, 123738])
(4, 106117)
torch.Size([4, 106117])
(4, 122774)
torch.Size([4, 122774])
(4, 120397)
torch.Size([4, 120397])
(4, 121231)
torch.Size([4, 121231])
(4, 117121)
torch.Size([4, 117121])
(4, 120020)
torch.Size([4, 120020])
(4, 120962)
torch.Size([4, 120962])
(4, 122871)
torch.Size([4, 122871])
(4, 118496)
torch.Size([4, 118496])
(4, 115745)
torch.Size([4, 115745])
(4, 117484)
torch.Size([4, 117484])
(4, 126293)
torch.Size([4, 126293])
(4, 111447)
torch.Size([4, 111447])
(4, 117627)
torch.Size([4, 117627])
(4, 123787)
torch.Size([4, 123787])
(4, 116562)
torch.Size([4, 116562])
(4, 124013)
torch.Size([4, 124013])
(4, 121605)
torch.Size([4, 121605])
(4, 112130)
torch.Size([4, 112130])
(4, 113294)
torch.Size([4, 113294])
(4, 116991)
torch.Size([4, 116991])
(4, 117050)
torch.Size([4, 117050])
(4, 119401)
torch.Size([4, 119401])
(4, 104953)
torch.Size([4, 104953])
(4, 124593)
torch.Size([4, 124593])
(4, 119365)
torch.Size([4, 119365])
(4, 124681)
torch.Size([4, 124681])
(4, 119589)
torch.Size([4, 119589])
(4, 117486)
torch.Size([4, 117486])
(4, 105483)
torch.Size([4, 105483])
(4, 118209)
torch.Size([4, 118209])
(4, 117829)
torch.Size([4, 117829])
(4, 119919)
torch.Size([4, 119919])
(4, 125915)
torch.Size([4, 125915])
(4, 124551)
torch.Size([4, 124551])
(4, 122983)
torch.Size([4, 122983])
(4, 125154)
torch.Size([4, 125154])
(4, 116898)
torch.Size([4, 116898])
(4, 125119)
torch.Size([4, 125119])
(4, 82838)
torch.Size([4, 82838])
(4, 114473)
torch.Size([4, 114473])
(4, 107730)
torch.Size([4, 107730])
Iter 250/39011 training loss = 0.115, time = 0.7330, time for 50 iter: 7.4560
(4, 125316)
torch.Size([4, 125316])
(4, 112091)
torch.Size([4, 112091])
(4, 126516)
torch.Size([4, 126516])
(4, 118164)
torch.Size([4, 118164])
(4, 108505)
torch.Size([4, 108505])
(4, 95342)
torch.Size([4, 95342])
(4, 126606)
torch.Size([4, 126606])
(4, 111998)
torch.Size([4, 111998])
(4, 123836)
torch.Size([4, 123836])
(4, 111998)
torch.Size([4, 111998])
(4, 102999)
torch.Size([4, 102999])
(4, 106076)
torch.Size([4, 106076])
(4, 111843)
torch.Size([4, 111843])
(4, 124306)
torch.Size([4, 124306])
(4, 122096)
torch.Size([4, 122096])
(4, 119279)
torch.Size([4, 119279])
(4, 124604)
torch.Size([4, 124604])
(4, 119534)
torch.Size([4, 119534])
(4, 105079)
torch.Size([4, 105079])
(4, 122616)
torch.Size([4, 122616])
(4, 115792)
torch.Size([4, 115792])
(4, 118012)
torch.Size([4, 118012])
(4, 123048)
torch.Size([4, 123048])
(4, 119054)
torch.Size([4, 119054])
(4, 118651)
torch.Size([4, 118651])
(4, 127509)
torch.Size([4, 127509])
(4, 113207)
torch.Size([4, 113207])
(4, 109716)
torch.Size([4, 109716])
(4, 117035)
torch.Size([4, 117035])
(4, 110681)
torch.Size([4, 110681])
(4, 112904)
torch.Size([4, 112904])
(4, 114451)
torch.Size([4, 114451])
(4, 124405)
torch.Size([4, 124405])
(4, 115799)
torch.Size([4, 115799])
(4, 124870)
torch.Size([4, 124870])
(4, 125365)
torch.Size([4, 125365])
(4, 106935)
torch.Size([4, 106935])
(4, 116438)
torch.Size([4, 116438])
(4, 113444)
torch.Size([4, 113444])
(4, 108626)
torch.Size([4, 108626])
(4, 115396)
torch.Size([4, 115396])
(4, 116665)
torch.Size([4, 116665])
(4, 124369)
torch.Size([4, 124369])
(4, 118436)
torch.Size([4, 118436])
(4, 107114)
torch.Size([4, 107114])
(4, 122065)
torch.Size([4, 122065])
(4, 102112)
torch.Size([4, 102112])
(4, 127059)
torch.Size([4, 127059])
(4, 126052)
torch.Size([4, 126052])
(4, 113666)
torch.Size([4, 113666])
Iter 300/39011 training loss = 0.116, time = 0.6683, time for 50 iter: 7.7379
(4, 114686)
torch.Size([4, 114686])
(4, 104319)
torch.Size([4, 104319])
(4, 120349)
torch.Size([4, 120349])
(4, 116413)
torch.Size([4, 116413])
(4, 117712)
torch.Size([4, 117712])
(4, 101011)
torch.Size([4, 101011])
(4, 88703)
torch.Size([4, 88703])
(4, 123210)
torch.Size([4, 123210])
(4, 125144)
torch.Size([4, 125144])
(4, 126178)
torch.Size([4, 126178])
(4, 126778)
torch.Size([4, 126778])
(4, 92665)
torch.Size([4, 92665])
(4, 111683)
torch.Size([4, 111683])
(4, 126755)
torch.Size([4, 126755])
(4, 122380)
torch.Size([4, 122380])
(4, 125519)
torch.Size([4, 125519])
(4, 128078)
torch.Size([4, 128078])
(4, 125671)
torch.Size([4, 125671])
(4, 124213)
torch.Size([4, 124213])
(4, 110427)
torch.Size([4, 110427])
(4, 120154)
torch.Size([4, 120154])
(4, 125036)
torch.Size([4, 125036])
(4, 127891)
torch.Size([4, 127891])
(4, 124695)
torch.Size([4, 124695])
(4, 122588)
torch.Size([4, 122588])
(4, 96904)
torch.Size([4, 96904])
(4, 120094)
torch.Size([4, 120094])
(4, 120955)
torch.Size([4, 120955])
(4, 122282)
torch.Size([4, 122282])
(4, 122095)
torch.Size([4, 122095])
(4, 124902)
torch.Size([4, 124902])
(4, 126414)
torch.Size([4, 126414])
(4, 122207)
torch.Size([4, 122207])
(4, 126289)
torch.Size([4, 126289])
(4, 121176)
torch.Size([4, 121176])
(4, 125493)
torch.Size([4, 125493])
(4, 119628)
torch.Size([4, 119628])
(4, 121311)
torch.Size([4, 121311])
(4, 119331)
torch.Size([4, 119331])
(4, 123311)
torch.Size([4, 123311])
(4, 115609)
torch.Size([4, 115609])
(4, 124941)
torch.Size([4, 124941])
(4, 127368)
torch.Size([4, 127368])
(4, 81526)
torch.Size([4, 81526])
(4, 120781)
torch.Size([4, 120781])
(4, 121999)
torch.Size([4, 121999])
(4, 124969)
torch.Size([4, 124969])
(4, 113425)
torch.Size([4, 113425])
(4, 102056)
torch.Size([4, 102056])
(4, 121921)
torch.Size([4, 121921])
Iter 350/39011 training loss = 0.107, time = 0.6732, time for 50 iter: 7.5147
(4, 122699)
torch.Size([4, 122699])
(4, 124312)
torch.Size([4, 124312])
(4, 121515)
torch.Size([4, 121515])
(4, 105646)
torch.Size([4, 105646])
(4, 125498)
torch.Size([4, 125498])
(4, 74259)
torch.Size([4, 74259])
(4, 125984)
torch.Size([4, 125984])
(4, 104375)
torch.Size([4, 104375])
(4, 123764)
torch.Size([4, 123764])
(4, 118138)
torch.Size([4, 118138])
(4, 118094)
torch.Size([4, 118094])
(4, 126405)
torch.Size([4, 126405])
(4, 123519)
torch.Size([4, 123519])
(4, 107106)
torch.Size([4, 107106])
(4, 118505)
torch.Size([4, 118505])
(4, 124670)
torch.Size([4, 124670])
(4, 125256)
torch.Size([4, 125256])
(4, 116673)
torch.Size([4, 116673])
(4, 122414)
torch.Size([4, 122414])
(4, 114801)
torch.Size([4, 114801])
(4, 126427)
torch.Size([4, 126427])
(4, 119905)
torch.Size([4, 119905])
(4, 110740)
torch.Size([4, 110740])
(4, 126582)
torch.Size([4, 126582])
(4, 121136)
torch.Size([4, 121136])
(4, 127626)
torch.Size([4, 127626])
(4, 94684)
torch.Size([4, 94684])
(4, 100086)
torch.Size([4, 100086])
(4, 124660)
torch.Size([4, 124660])
(4, 124710)
torch.Size([4, 124710])
(4, 108186)
torch.Size([4, 108186])
(4, 126197)
torch.Size([4, 126197])
(4, 120828)
torch.Size([4, 120828])
(4, 115757)
torch.Size([4, 115757])
(4, 116232)
torch.Size([4, 116232])
(4, 87132)
torch.Size([4, 87132])
(4, 111431)
torch.Size([4, 111431])
(4, 119098)
torch.Size([4, 119098])
(4, 112888)
torch.Size([4, 112888])
(4, 119031)
torch.Size([4, 119031])
(4, 118472)
torch.Size([4, 118472])
(4, 122088)
torch.Size([4, 122088])
(4, 118884)
torch.Size([4, 118884])
(4, 116185)
torch.Size([4, 116185])
(4, 126175)
torch.Size([4, 126175])
(4, 112983)
torch.Size([4, 112983])
(4, 122821)
torch.Size([4, 122821])
(4, 122530)
torch.Size([4, 122530])
(4, 117549)
torch.Size([4, 117549])
(4, 124393)
torch.Size([4, 124393])
Iter 400/39011 training loss = 0.105, time = 0.6509, time for 50 iter: 7.5501
(4, 109797)
torch.Size([4, 109797])
(4, 117069)
torch.Size([4, 117069])
(4, 123059)
torch.Size([4, 123059])
(4, 78888)
torch.Size([4, 78888])
(4, 114766)
torch.Size([4, 114766])
(4, 113335)
torch.Size([4, 113335])
(4, 125554)
torch.Size([4, 125554])
(4, 125768)
torch.Size([4, 125768])
(4, 119612)
torch.Size([4, 119612])
(4, 108157)
torch.Size([4, 108157])
(4, 105358)
torch.Size([4, 105358])
(4, 107962)
torch.Size([4, 107962])
(4, 126390)
torch.Size([4, 126390])
(4, 125047)
torch.Size([4, 125047])
(4, 125075)
torch.Size([4, 125075])
(4, 99679)
torch.Size([4, 99679])
(4, 119358)
torch.Size([4, 119358])
(4, 124606)
torch.Size([4, 124606])
(4, 120542)
torch.Size([4, 120542])
(4, 113428)
torch.Size([4, 113428])
(4, 126686)
torch.Size([4, 126686])
(4, 121705)
torch.Size([4, 121705])
(4, 124067)
torch.Size([4, 124067])
(4, 115624)
torch.Size([4, 115624])
(4, 126990)
torch.Size([4, 126990])
(4, 107718)
torch.Size([4, 107718])
(4, 122005)
torch.Size([4, 122005])
(4, 123674)
torch.Size([4, 123674])
(4, 127715)
torch.Size([4, 127715])
(4, 110934)
torch.Size([4, 110934])
(4, 110855)
torch.Size([4, 110855])
(4, 114000)
torch.Size([4, 114000])
(4, 113019)
torch.Size([4, 113019])
(4, 103564)
torch.Size([4, 103564])
(4, 120282)
torch.Size([4, 120282])
(4, 119944)
torch.Size([4, 119944])
(4, 117743)
torch.Size([4, 117743])
(4, 120147)
torch.Size([4, 120147])
(4, 113637)
torch.Size([4, 113637])
(4, 89678)
torch.Size([4, 89678])
(4, 108665)
torch.Size([4, 108665])
(4, 86940)
torch.Size([4, 86940])
(4, 126791)
torch.Size([4, 126791])
(4, 110400)
torch.Size([4, 110400])
(4, 118341)
torch.Size([4, 118341])
(4, 126325)
torch.Size([4, 126325])
(4, 111409)
torch.Size([4, 111409])
(4, 121147)
torch.Size([4, 121147])
(4, 119884)
torch.Size([4, 119884])
(4, 124198)
torch.Size([4, 124198])
Iter 450/39011 training loss = 0.095, time = 0.6173, time for 50 iter: 7.3486
(4, 122038)
torch.Size([4, 122038])
(4, 117246)
torch.Size([4, 117246])
(4, 78514)
torch.Size([4, 78514])
(4, 120690)
torch.Size([4, 120690])
(4, 127029)
torch.Size([4, 127029])
(4, 124575)
torch.Size([4, 124575])
(4, 124658)
torch.Size([4, 124658])
(4, 125589)
torch.Size([4, 125589])
(4, 78473)
torch.Size([4, 78473])
(4, 120573)
torch.Size([4, 120573])
(4, 121735)
torch.Size([4, 121735])
(4, 126836)
torch.Size([4, 126836])
(4, 123771)
torch.Size([4, 123771])
(4, 125275)
torch.Size([4, 125275])
(4, 121243)
torch.Size([4, 121243])
(4, 124647)
torch.Size([4, 124647])
(4, 108068)
torch.Size([4, 108068])
(4, 92399)
torch.Size([4, 92399])
(4, 124947)
torch.Size([4, 124947])
(4, 114840)
torch.Size([4, 114840])
(4, 124058)
torch.Size([4, 124058])
(4, 109443)
torch.Size([4, 109443])
(4, 125587)
torch.Size([4, 125587])
(4, 120511)
torch.Size([4, 120511])
(4, 125739)
torch.Size([4, 125739])
(4, 122734)
torch.Size([4, 122734])
(4, 121792)
torch.Size([4, 121792])
(4, 124821)
torch.Size([4, 124821])
(4, 119305)
torch.Size([4, 119305])
(4, 109640)
torch.Size([4, 109640])
(4, 122737)
torch.Size([4, 122737])
(4, 122621)
torch.Size([4, 122621])
(4, 126387)
torch.Size([4, 126387])
(4, 114082)
torch.Size([4, 114082])
(4, 121724)
torch.Size([4, 121724])
(4, 122210)
torch.Size([4, 122210])
(4, 84469)
torch.Size([4, 84469])
(4, 119620)
torch.Size([4, 119620])
(4, 111327)
torch.Size([4, 111327])
(4, 122156)
torch.Size([4, 122156])
(4, 124415)
torch.Size([4, 124415])
(4, 113316)
torch.Size([4, 113316])
(4, 104158)
torch.Size([4, 104158])
(4, 115059)
torch.Size([4, 115059])
(4, 125859)
torch.Size([4, 125859])
(4, 122933)
torch.Size([4, 122933])
(4, 123615)
torch.Size([4, 123615])
(4, 119346)
torch.Size([4, 119346])
(4, 107972)
torch.Size([4, 107972])
(4, 118572)
torch.Size([4, 118572])
Iter 500/39011 training loss = 0.093, time = 0.6724, time for 50 iter: 7.5669
(4, 116201)
torch.Size([4, 116201])
(4, 116746)
torch.Size([4, 116746])
(4, 116574)
torch.Size([4, 116574])
(4, 120709)
torch.Size([4, 120709])
(4, 124519)
torch.Size([4, 124519])
(4, 121792)
torch.Size([4, 121792])
(4, 125764)
torch.Size([4, 125764])
(4, 105462)
torch.Size([4, 105462])
(4, 124977)
torch.Size([4, 124977])
(4, 119710)
torch.Size([4, 119710])
(4, 113382)
torch.Size([4, 113382])
(4, 125978)
torch.Size([4, 125978])
(4, 120063)
torch.Size([4, 120063])
(4, 109514)
torch.Size([4, 109514])
(4, 120102)
torch.Size([4, 120102])
(4, 118533)
torch.Size([4, 118533])
(4, 118662)
torch.Size([4, 118662])
(4, 85992)
torch.Size([4, 85992])
(4, 105840)
torch.Size([4, 105840])
(4, 124787)
torch.Size([4, 124787])
(4, 119600)
torch.Size([4, 119600])
(4, 116539)
torch.Size([4, 116539])
(4, 95179)
torch.Size([4, 95179])
(4, 121274)
torch.Size([4, 121274])
(4, 111205)
torch.Size([4, 111205])
(4, 120640)
torch.Size([4, 120640])
(4, 111449)
torch.Size([4, 111449])
(4, 105168)
torch.Size([4, 105168])
(4, 119895)
torch.Size([4, 119895])
(4, 125236)
torch.Size([4, 125236])
^CWARNING - LCCNet - Aborted after 0:01:26!
Traceback (most recent call last):
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/site-packages/PIL/ImageFile.py", line 504, in _save
    fh = fp.fileno()
AttributeError: '_idat' object has no attribute 'fileno'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "train_with_sacred.py", line 180, in <module>
    @ex.automain
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/site-packages/sacred/experiment.py", line 137, in automain
Traceback (most recent call last):
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
    self.run_commandline()
BrokenPipeError: [Errno 32] Broken pipe
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/site-packages/sacred/experiment.py", line 260, in run_commandline
    return self.run(cmd_name, config_updates, named_configs, {}, args)
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/site-packages/sacred/experiment.py", line 209, in run
    run()
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/site-packages/sacred/run.py", line 221, in __call__
    self.result = self.main_function(*args)
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/site-packages/sacred/config/captured_function.py", line 46, in captured_function
    result = wrapped(*args, **kwargs)
  File "train_with_sacred.py", line 453, in main
    train_writer.add_image("gt_proj_lidar", gt_show, train_iter)
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/site-packages/tensorboardX/writer.py", line 686, in add_image
    summary = image(tag, img_tensor, dataformats=dataformats)
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/site-packages/tensorboardX/summary.py", line 287, in image
    image = make_image(tensor, rescale=rescale)
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/site-packages/tensorboardX/summary.py", line 333, in make_image
    image.save(output, format='PNG')
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/site-packages/PIL/Image.py", line 2235, in save
    save_handler(self, fp, filename)
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/site-packages/PIL/PngImagePlugin.py", line 1349, in _save
    ImageFile._save(im, _idat(fp, chunk), [("zip", (0, 0) + im.size, 0, rawmode)])
  File "/home/mrwang/miniconda3/envs/lccnet/lib/python3.6/site-packages/PIL/ImageFile.py", line 518, in _save
    l, s, d = e.encode(bufsize)
KeyboardInterrupt
(lccnet) ]0;mrwang@computer: ~/code/calibration/dl/lccnet[01;32mmrwang@computer[00m:[01;34m~/code/calibration/dl/lccnet[00m$ exit
exit

Script done on 2022-11-20 23:45:26+08:00 [COMMAND_EXIT_CODE="1"]
